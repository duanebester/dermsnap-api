openapi: "3.0.0"
info:
  title: "API"
  version: "1.0.0"
servers:
  - url: "http://localhost:3000"
basePath: /api
paths:
  /me:
    get:
      summary: "Get current user"
      operationId: "me"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /dermsnaps:
    get:
      summary: "Get dermsnaps"
      operationId: "get-dermsnaps"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Dermsnap"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: "Create dermsnap"
      operationId: "create-dermsnap"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDermsnap"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dermsnap"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /dermsnaps/{dermsnap_id}:
    parameters:
      - $ref: "#/components/parameters/dermsnap_id"
    get:
      summary: "Get dermsnap"
      operationId: "get-dermsnap-by-id"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDermsnap"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dermsnap"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: "Update dermsnap"
      operationId: "update-dermsnap-by-id"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDermsnap"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dermsnap"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: "Delete dermsnap"
      operationId: "delete-dermsnap-by-id"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "Delete Dermsnap"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dermsnap"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /dermsnaps/{dermsnap_id}/images:
    parameters:
      - $ref: "#/components/parameters/dermsnap_id"
    post:
      summary: "Upload dermsnap image"
      operationId: "upload-dermsnap-image"
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                dermsnap_id:
                  type: string
                  format: uuid
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DermsnapImage"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{user_id}/user-info:
    parameters:
      - $ref: "#/components/parameters/user_id"
    get:
      summary: "Get user info"
      operationId: "get-user-info"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: "Create user info"
      operationId: "create-user-info"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserInfo"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{user_id}/doctor-info:
    parameters:
      - $ref: "#/components/parameters/user_id"
    get:
      summary: "Get doctor info"
      operationId: "get-doctor-info"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoctorInfo"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: "Create doctor info"
      operationId: "create-doctor-info"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDoctorInfo"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoctorInfo"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Role:
      x-go-type: models.Role
      x-go-type-import:
        name: models
        path: dermsnap/models
      type: string
      enum:
        - admin
        - doctor
        - user
    IdentifierType:
      x-go-type: models.IdentifierType
      x-go-type-import:
        name: models
        path: dermsnap/models
      type: string
      enum:
        - apple
        - doximity
        - google
    User:
      x-go-type: models.User
      x-go-type-import:
        name: models
        path: dermsnap/models
      type: object
      required:
        - id
        - role
        - identifier
        - identifier_type
      properties:
        id:
          type: string
          format: uuid
        role:
          $ref: "#/components/schemas/Role"
        identifier:
          type: string
        identifier_type:
          $ref: "#/components/schemas/IdentifierType"
    UserInfo:
      x-go-type: models.UserInfo
      x-go-type-import:
        name: models
        path: dermsnap/models
      type: object
      required:
        - id
        - user_id
        - age
        - height
        - weight
        - gender
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        allOf:
          $ref: "#/components/schemas/CreateUserInfo"
    DoctorInfo:
      x-go-type: models.DoctorInfo
      x-go-type-import:
        name: models
        path: dermsnap/models
      type: object
      required:
        - id
        - user_id
        - specialty
        - credentials
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        specialty:
          type: string
        credentials:
          type: string
    CreateUserInfo:
      x-go-type: models.CreateUserInfo
      x-go-type-import:
        name: models
        path: dermsnap/models
      type: object
      required:
        - age
        - height
        - weight
        - gender
      properties:
        age:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        weight:
          type: integer
          format: int32
        gender:
          type: string
          format: string
    CreateDoctorInfo:
      x-go-type: models.CreateDoctorInfo
      x-go-type-import:
        name: models
        path: dermsnap/models
      type: object
      required:
        - specialty
        - credentials
      properties:
        specialty:
          type: string
        credentials:
          type: string
    BodyLocation:
      x-go-type: models.BodyLocation
      x-go-type-import:
        name: models
        path: dermsnap/models
      type: string
      enum:
        - scalp
        - face
        - eyes
        - mouth
        - neck
        - chest
        - abdomen
        - back
        - arms
        - hands
        - buttocks
        - genitals
        - legs
        - feet
    DermsnapImage:
      x-go-type: models.DermsnapImage
      x-go-type-import:
        name: models
        path: dermsnap/models
      type: object
      required:
        - image_path
      properties:
        id:
          type: string
          format: uuid
        dermsnap_id:
          type: string
          format: uuid
        image_path:
          type: string
        created_at:
          type: string
          format: date-time
    Dermsnap:
      x-go-type: models.Dermsnap
      x-go-type-import:
        name: models
        path: dermsnap/models
      type: object
      required:
        - id
        - user_id
        - reviewed
        - start_time
        - duration
        - locations
        - changed
        - new_medications
        - itchy
        - painful
        - more_info
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        reviewed:
          type: boolean
        reviewed_by:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        allOf:
          $ref: "#/components/schemas/CreateDermsnap"
    CreateDermsnap:
      x-go-type: models.CreateDermsnap
      x-go-type-import:
        name: models
        path: dermsnap/models
      type: object
      required:
        - start_time
        - duration
        - locations
        - changed
        - new_medications
        - itchy
        - painful
        - more_info
      properties:
        allOf:
          $ref: "#/components/schemas/UpdateDermsnap"
    UpdateDermsnap:
      x-go-type: models.UpdateDermsnap
      x-go-type-import:
        name: models
        path: dermsnap/models
      type: object
      properties:
        start_time:
          type: string
          format: date-time
        duration:
          type: integer
          format: int32
        locations:
          items:
            $ref: "#/components/schemas/BodyLocation"
          type: array
        changed:
          type: boolean
        new_medications:
          items:
            type: string
          type: array
        itchy:
          type: boolean
        painful:
          type: boolean
        more_info:
          type: string
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
  parameters:
    user_id:
      name: user_id
      description: The user ID
      in: path
      required: true
      schema:
        type: string
        format: uuid
    dermsnap_id:
      name: dermsnap_id
      description: The dermsnap ID
      in: path
      required: true
      schema:
        type: string
        format: uuid
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes

